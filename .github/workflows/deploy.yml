name: Debug CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Create prod config
        run: |
          cat > src/main/resources/application-prod.properties << EOF
          spring.datasource.url=${{ secrets.DB_URL }}
          spring.datasource.username=${{ secrets.DB_USERNAME }}
          spring.datasource.password=${{ secrets.DB_PASSWORD }}
          jwt.secret=${{ secrets.JWT_SECRET }}
          jwt.access-token-validity=86400000
          jwt.refresh-token-validity=604800000
          kakao.client-id=${{ secrets.KAKAO_CLIENT_ID }}
          kakao.client-secret=${{ secrets.KAKAO_CLIENT_SECRET }}
          kakao.redirect-uri=${{ secrets.KAKAO_REDIRECT_URI }}
          kakao.token-uri=https://kauth.kakao.com/oauth/token
          kakao.user-info=https://kapi.kakao.com/v2/user/me
          spring.jpa.show-sql=false
          EOF
      
      - name: Build
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test
      
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          source: "build/libs/*.jar"
          target: "/home/ubuntu/"
      
      # 디버깅용 환경 체크
      - name: Check Environment
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "=== 환경 체크 ==="
            echo "현재 디렉토리: $(pwd)"
            echo "Java 버전:"
            java -version || echo "❌ Java가 설치되지 않음!"
            echo ""
            echo "JAR 파일 확인:"
            ls -la build/libs/ || echo "❌ JAR 파일 없음!"
            echo ""
            echo "실행 중인 Java 프로세스:"
            ps aux | grep java || echo "Java 프로세스 없음"
            echo ""
            echo "포트 8080 사용 현황:"
            netstat -tlnp | grep :8080 || echo "포트 8080 사용 안 함"
      
      # 실제 배포
      - name: Deploy Application
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            echo "=== 애플리케이션 배포 시작 ==="
            
            # 기존 프로세스 정리
            echo "기존 프로세스 종료..."
            pkill -f "biddy-api" || echo "종료할 프로세스 없음"
            sleep 3
            
            # JAR 파일 존재 확인
            if [ ! -f "build/libs/biddy-api-0.0.1-SNAPSHOT.jar" ]; then
              echo "❌ JAR 파일을 찾을 수 없습니다!"
              echo "현재 디렉토리 내용:"
              ls -la
              echo "build/libs 내용:"
              ls -la build/libs/ || echo "build/libs 디렉토리 없음"
              exit 1
            fi
            
            # Java 설치 확인
            if ! command -v java &> /dev/null; then
              echo "❌ Java가 설치되지 않았습니다. 설치 중..."
              sudo apt update
              sudo apt install -y openjdk-17-jdk
            fi
            
            echo "Java 버전 확인:"
            java -version
            
            # 애플리케이션 시작
            echo "🚀 애플리케이션 시작..."
            nohup java -jar \
              -Dspring.profiles.active=prod \
              -Xms256m -Xmx512m \
              build/libs/biddy-api-0.0.1-SNAPSHOT.jar > app.log 2>&1 &
            
            APP_PID=$!
            echo "애플리케이션 PID: $APP_PID"
            echo $APP_PID > app.pid
            
            # 시작 확인
            echo "⏳ 애플리케이션 시작 대기 중..."
            sleep 10
            
            if ps -p $APP_PID > /dev/null; then
              echo "✅ 애플리케이션이 성공적으로 시작되었습니다!"
              echo "📝 로그 확인: tail -f app.log"
            else
              echo "❌ 애플리케이션 시작 실패!"
              echo "에러 로그:"
              tail -20 app.log 2>/dev/null || echo "로그 파일 없음"
              exit 1
            fi
